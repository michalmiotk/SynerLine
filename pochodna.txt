 for(int rows=0; rows<src_gray.rows; rows++)
  {
    int max[2]={0,0};
    int min[2]={0,0};
	for(int columns=maxThreshold; columns<src_gray.cols ; columns++)
	{
		if(src_gray.at<uchar>(rows,columns)-src_gray.at<uchar>(rows,columns-maxThreshold)>max[0])
		{
			max[0]=src_gray.at<uchar>(rows,columns)-src_gray.at<uchar>(rows,columns-maxThreshold);
			max[1]=columns;
		}
		if(src_gray.at<uchar>(rows,columns)-src_gray.at<uchar>(rows,columns-maxThreshold)<min[0])
		{
			min[0]=src_gray.at<uchar>(rows,columns)-src_gray.at<uchar>(rows,columns-maxThreshold);
			min[1]=columns;
		}
	}
	if(max[1]-min[1]>min_length && max[1]-min[1]<max_length && max[0]-min[0]>-lowThreshold+prog_histogram){

			line(out, Point(min[1],rows), Point(min[1],rows), (255,255,255), 5, 8, 0);
			//line(src_gray, Point(10,0), Point(200,200), (122,122,122), 2, 8, 0);
			line(out, Point(max[1],rows), Point(max[1],rows), (115,115,115), 5, 8, 0);
	}
  }
  //RZEDY
  for(int columns=0; columns<src_gray.cols; columns++)
  {
    int max[2]={0,0};
    int min[2]={0,0};
	for(int rows=maxThreshold; rows<src_gray.rows; rows++)
	{
		if(src_gray.at<uchar>(rows,columns)-src_gray.at<uchar>(rows-maxThreshold,columns)>max[0])
		{
			max[0]=src_gray.at<uchar>(rows,columns)-src_gray.at<uchar>(rows-maxThreshold,columns);
			max[1]=rows;
		}
		if(src_gray.at<uchar>(rows,columns)-src_gray.at<uchar>(rows-maxThreshold,columns)<min[0])
		{
			min[0]=src_gray.at<uchar>(rows,columns)-src_gray.at<uchar>(rows-maxThreshold,columns);
			min[1]=rows;
		}
	}
	if(max[1]-min[1]>min_length && max[1]-min[1]<max_length && max[0]-min[0]>-lowThreshold+prog_histogram){

			line(out, Point(columns,min[1]), Point(columns,min[1]), (255,255,255), 5, 8, 0);
			//line(src_gray, Point(10,0), Point(200,200), (122,122,122), 2, 8, 0);
			line(out, Point(columns,max[1]), Point(columns,max[1]), (115,115,115), 5, 8, 0);
	}
  }
